#!/bin/bash

CONTROL_PIPE=/tmp/feed4-control-pipe
MIXERFORMAT='video/x-raw-rgb, bpp=(int)32, depth=(int)32, endianness=(int)4321, red_mask=(int)65280, green_mask=(int)16711680, blue_mask=(int)-16777216, width=(int)1024, height=(int)576, framerate=(fraction)24/1, pixel-aspect-ratio=(fraction)1/1, interlaced=(boolean)false'

SRC="udpsrc port=4030 caps='application/x-rtp, media=(string)video, clock-rate=(int)90000, encoding-name=(string)H264' ! rtph264depay ! ffdec_h264"
#SRC="filesrc location=../test/LES_TDS_launch.mp4 ! decodebin2 name=decoder "
SHMSIZE='shm-size=10000000'
#SHMOPTION="wait-for-connection=0 sync=false"
SHMOPTION="wait-for-connection=0 sync=false"
SHMSINK1="shmsink socket-path=$CONTROL_PIPE $SHMSIZE $SHMOPTION"
SCALE='ffmpegcolorspace ! videoscale ! ffmpegcolorspace'
AUDIOFORMAT='audio/x-raw-int, endianness=(int)1234, signed=(boolean)true, width=(int)16, depth=(int)16, rate=(int)44100, channels=(int)2'

#udpsrc port=4030 caps='application/x-rtp, media=(string)video, clock-rate=(int)90000, encoding-name=(string)H264' ! rtph264depay ! ffdec_h264\
while true ; do
  echo "$SRC"
    # Remove the named pipe if it exist
    rm -f $CONTROL_PIPE
    snowmix=`ps c |cut -c28-34 | grep snowmix | head -1`
    if [ X$snowmix != X ] ; then
    (
	#echo 'audio feed ctr isaudio 4'
	gst-launch-0.10 -q \
	udpsrc port=4030 caps='application/x-rtp, media=(string)video, clock-rate=(int)90000, encoding-name=(string)H264' ! \
	rtph264depay !	\
	tee name=t0 !	\
	ffdec_h264 !	\
	ffmpegcolorspace ! \
	$SCALE ! $MIXERFORMAT ! $SHMSINK1 \
	t0. ! h264parse ! queue leaky=2 ! mpegtsmux ! tcpserversink port=4030
	# videorate ! $SCALE ! $MIXERFORMAT ! $SHMSINK1 decoder. \
	# ! queue ! audioconvert ! $AUDIOFORMAT ! filesink sync=true location=/dev/fd/1
    ) | nc 127.0.0.1 9999
    fi
    #gst-launch-0.10 -v $SRC ! videorate ! $SCALE ! $MIXERFORMAT ! $SHMSINK1
    #gst-launch-0.10 -v $SRC ! $SCALE ! $MIXERFORMAT ! $SHMSINK1
    sleep 2
done
exit



# Build a pipeline for receiving data from Logitech1:
