#!/bin/bash

CONTROL_PIPE=/tmp/feed3-control-pipe
MIXERFORMAT='video/x-raw-rgb, bpp=(int)32, depth=(int)32, endianness=(int)4321, red_mask=(int)65280, green_mask=(int)16711680, blue_mask=(int)-16777216, width=(int)768, height=(int)576, framerate=(fraction)25/1, pixel-aspect-ratio=(fraction)1/1, interlaced=(boolean)false'
MIXERFORMAT='video/x-raw-rgb, bpp=(int)32, depth=(int)32, endianness=(int)4321, red_mask=(int)65280, green_mask=(int)16711680, blue_mask=(int)-16777216, width=(int)704, height=(int)576, pixel-aspect-ratio=(fraction)1/1, interlaced=(boolean)false'

SRC="udpsrc port=4050 caps='application/x-rtp, media=(string)video, payload=(int)96, clock-rate=(int)90000, encoding-name=(string)MP4V-ES, profile-level-id=(string)245, config=(string)000001B0F5000001B50900000100000001200088401928B02240A21F, a-framerate=(string)30.0, a-mpeg4-esid=(string)201, clock-base=(uint)1918588220, seqnum-base=(uint)40098, npt-start=(guint64)0, play-speed=(double)1, play-scale=(double)1' ! rtpmp4vdepay ! mpeg4videoparse ! ffdec_mpeg4"
#SRC="filesrc location=../test/LES_TDS_launch.mp4 ! decodebin2 name=decoder "
SHMSIZE='shm-size=10000000'
#SHMOPTION="wait-for-connection=0 sync=false"
SHMOPTION="wait-for-connection=0 sync=false"
SHMSINK1="shmsink socket-path=$CONTROL_PIPE $SHMSIZE $SHMOPTION"
SCALE='ffmpegcolorspace ! videoscale ! ffmpegcolorspace'
AUDIOFORMAT='audio/x-raw-int, endianness=(int)1234, signed=(boolean)true, width=(int)16, depth=(int)16, rate=(int)44100, channels=(int)2'
#udpsrc port=4446 caps='application/x-rtp, media=(string)video, payload=(int)96, clock-rate=(int)90000, encoding-name=(string)MP4V-ES, profile-level-id=(string)245, config=(string)000001B0F5000001B50900000100000001200088401928B02240A21F, a-framerate=(string)30.0, a-mpeg4-esid=(string)201, clock-base=(uint)1918588220, seqnum-base=(uint)40098, npt-start=(guint64)0, play-speed=(double)1, play-scale=(double)1' ! rtpmp4vdepay ! mpeg4videoparse ! ffdec_mpeg4 ! \

while true ; do
  echo "$SRC"
    # Remove the named pipe if it exist
    rm -f $CONTROL_PIPE
    snowmix=`ps c |cut -c28-34 | grep snowmix | head -1`
    if [ X$snowmix != X ] ; then
    (
	#echo 'audio feed ctr isaudio 3'
	gst-launch-0.10 -q \
	udpsrc port=4050 caps='application/x-rtp, media=(string)video, payload=(int)96, clock-rate=(int)90000, encoding-name=(string)MP4V-ES, profile-level-id=(string)245, config=(string)000001B0F5000001B50900000100000001200088401928B02240A21F, a-mpeg4-iod=(string)\"\\ \\\"data:application/mpeg4-iod\\;base64\\,AoDUAE8BAf/1AQOAbwABQFBkYXRhOmFwcGxpY2F0aW9uL21wZWc0LW9kLWF1O2Jhc2U2NCxBUjBCR3dVZkF4Y0F5U1FBWlFRTklCRUVrK0FBRnVOZ0FCYmpZQVlCQkE9PQQNAQUABAAAAAAAAAAAAAYJAQAAAAAAAAAAAzoAAkA2ZGF0YTphcHBsaWNhdGlvbi9tcGVnNC1iaWZzLWF1O2Jhc2U2NCx3QkFTWVFTSVVFVUZQd0E9BBICDQAAAgAAAAAAAAAABQMAAEAGCQEAAAAAAAAAAA\\=\\=\\\"\", a-framerate=(string)30.0, a-mpeg4-esid=(string)201, clock-base=(uint)1918588220, seqnum-base=(uint)40098, npt-start=(guint64)0, play-speed=(double)1, play-scale=(double)1' ! \
	rtpmp4vdepay	! \
	mpeg4videoparse ! \
	tee name=t0	! \
	ffdec_mpeg4 ! \
	$SCALE ! $MIXERFORMAT ! $SHMSINK1 \
	t0. ! queue leaky=2 ! mpegtsmux ! tcpserversink port=4020
	# videorate ! $SCALE ! $MIXERFORMAT ! $SHMSINK1 decoder. \
	# ! queue ! audioconvert ! $AUDIOFORMAT ! filesink sync=true location=/dev/fd/1
    ) | nc 127.0.0.1 9999
    fi
    #gst-launch-0.10 -v $SRC ! videorate ! $SCALE ! $MIXERFORMAT ! $SHMSINK1
    #gst-launch-0.10 -v $SRC ! $SCALE ! $MIXERFORMAT ! $SHMSINK1
    sleep 2
done
exit



# Build a pipeline for receiving data from Logitech1:
